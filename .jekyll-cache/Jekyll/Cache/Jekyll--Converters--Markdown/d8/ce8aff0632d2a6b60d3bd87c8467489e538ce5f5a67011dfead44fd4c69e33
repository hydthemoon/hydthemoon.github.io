I"<p>코테 언어 3대장 중 초심자가 봤을 때 가장 어려워보이는 언어는 자바가 아닐까 싶다. C 조금 하다가 파이썬 원툴로 잘 살아왔지만 회사에서 자바를 쓰기 때문에.. 그리고 앞으로 자바민국에서 살아가기 위해 나도 자바 공부를 시작했는데, 이것도 정리하면서 공부하면 도움이 되지 않을까 싶어 정리해보기로 했다.</p>

<h2 id="필드에서의-구분">필드에서의 구분</h2>

<ul>
  <li>class variable (클래스 변수, static 변수)</li>
  <li>instance variable (인스턴스 변수)</li>
  <li>local variable (지역 변수)
static/instance 변수들의 초깃값은 적절히 설정되어 있음.</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: left"><center>타입</center></th>
      <th style="text-align: center"><center>생성시기</center></th>
      <th style="text-align: right"><center>소멸시기</center></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><strong>class</strong></td>
      <td style="text-align: center"><center>클래스가 메모리에 로드될 때</center></td>
      <td style="text-align: right"><center>프로그램이 종료될 때 </center></td>
    </tr>
    <tr>
      <td style="text-align: left"><strong>instance</strong></td>
      <td style="text-align: center"><center>인스턴스가 생성될 때</center></td>
      <td style="text-align: right"><center> 인스턴스가 소멸할때/GC가 수거할 때 </center></td>
    </tr>
    <tr>
      <td style="text-align: left"><strong>local</strong></td>
      <td style="text-align: center"><center>블록 내의 변수 선언문이 실행될 때</center></td>
      <td style="text-align: right"><center> 블록을 벗어날 때 </center></td>
    </tr>
  </tbody>
</table>

<p>class 변수는 instance를 생성하기 전부터 이미 메모리(method영역)에 로드되어 있다. 때문에, 해당 클래스의 모든 instance는 같은 값을 가지게 된다. 따라서, shared variable(공유 변수)라고도 불림.</p>

<p>instance 변수는 heap영역에 저장되어 instance마다 개별 지정 가능.</p>

<p>local 변수는 stack에 저장됨.</p>

<h4 id="예시">예시</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Car</span> <span class="o">{</span>
  <span class="kt">int</span> <span class="n">limit</span> <span class="o">=</span> <span class="mi">500</span><span class="o">;</span> <span class="c1">// instance variable</span>
  <span class="kd">static</span> <span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="err">'</span><span class="n">ionic</span><span class="err">'</span><span class="o">;</span> <span class="c1">// static variable</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span> <span class="n">args</span><span class="o">[]){</span>
    <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="c1">// local variable</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="메소드에서의-구분">메소드에서의 구분</h2>

<ul>
  <li>class method (클래스 메소드, static method)</li>
  <li>instance method (인스턴스 메소드)</li>
</ul>

<h4 id="예시-1">예시</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Car</span> <span class="o">{</span>
  <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
  <span class="kt">void</span> <span class="o">(){</span>
    <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<hr />

<p>각 변수가 어떻게 저장되는지 더 찾아보다가 JAVA에서 GC가 메모리를 어떻게 관리하는지에 대해 공부하게 되었는데 다음 포스트에서 다룰 예정이다.</p>

:ET